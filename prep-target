#!/usr/bin/env bash

# ``prep-target`` handles the preparations for installing and configuring
# the "target" configuration of DevStack.


# Keep track of the devstack directory
GRENADE_DIR=$(cd $(dirname "$0") && pwd)

# Import common functions
source $GRENADE_DIR/functions

# Determine what system we are running on.  This provides ``os_VENDOR``,
# ``os_RELEASE``, ``os_UPDATE``, ``os_PACKAGE``, ``os_CODENAME``
# and ``DISTRO``
GetDistro

# Source params
source $GRENADE_DIR/grenaderc

# For debugging
set -o xtrace


# System Preparation
# ==================

# perform cleanup to ensure a clean starting environment
##add a config opt to still do this?
#rm -rf $TARGET_DEVSTACK_DIR

# Get DevStack if it doesn't exist
if [[ ! -d $TARGET_DEVSTACK_DIR ]]; then
    git_clone $TARGET_DEVSTACK_REPO $TARGET_DEVSTACK_DIR $TARGET_DEVSTACK_BRANCH
fi

# Load up a copy of the downloaded images if not present
if [[ -d $DEST/images ]]; then
    rsync -a $DEST/images/* $TARGET_DEVSTACK_DIR/files
fi

# Set up target localrc
if [[ ! -r $TARGET_DEVSTACK_DIR/localrc ]]; then
    cat $GRENADE_DIR/devstack.localrc.target >$TARGET_DEVSTACK_DIR/localrc
    if [[ -r $GRENADE_DIR/devstack.localrc ]]; then
        cat $GRENADE_DIR/devstack.localrc >>$TARGET_DEVSTACK_DIR/localrc
    fi
fi

# Set up Screen
# =============

# Get target config
source $TARGET_DEVSTACK_DIR/stackrc

# Create a new named screen to run processes in
screen -d -m -S $SCREEN_NAME -t shell -s /bin/bash
sleep 1
# Set a reasonable statusbar
SCREEN_HARDSTATUS=${SCREEN_HARDSTATUS:-'%{= .} %-Lw%{= .}%> %n%f %t*%{= .}%+Lw%< %-=%{g}(%{d}%H/%l%{g})'}
screen -r $SCREEN_NAME -X hardstatus alwayslastline "$SCREEN_HARDSTATUS"
