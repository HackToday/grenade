#!/usr/bin/env bash

# ``upgrade-nova``

echo "*********************************************************************"
echo "Begin $0"
echo "*********************************************************************"

# Clean up any resources that may be in use
cleanup() {
    set +o errexit

    echo "*********************************************************************"
    echo "ERROR: Abort $0"
    echo "*********************************************************************"

    # Kill ourselves to signal any calling process
    trap 2; kill -2 $$
}

trap cleanup SIGHUP SIGINT SIGTERM

# Keep track of the grenade directory
GRENADE_DIR=$(cd $(dirname "$0") && pwd)

# Import common functions
source $GRENADE_DIR/functions

# Determine what system we are running on.  This provides ``os_VENDOR``,
# ``os_RELEASE``, ``os_UPDATE``, ``os_PACKAGE``, ``os_CODENAME``
# and ``DISTRO``
GetDistro

# Source params
source $GRENADE_DIR/grenaderc

# This script exits on an error so that errors don't compound and you see
# only the first error that occured.
set -o errexit

# Print the commands being run so that we can see the command that triggers
# an error.  It is also useful for following allowing as the install occurs.
set -o xtrace


# Upgrade Nova
# ============

# Kill running Nova processes
for serv in n-api n-cauth n-cpu n-crt n-net n-novnc n-obj n-sch n-vol n-xvnc; do
    screen -S $SCREEN_NAME -p $serv -X kill
done

QUANTUMCLIENT_DIR=$DEST/python-quantumclient
QUANTUM_DIR=$DEST/quantum

SYSLOG=`trueorfalse False $SYSLOG`

# Duplicate some setup bits from trunk DevStack
cd $TRUNK_DEVSTACK_DIR
source $TRUNK_DEVSTACK_DIR/stackrc
SERVICE_HOST=${SERVICE_HOST:-localhost}
S3_SERVICE_PORT=${S3_SERVICE_PORT:-8080}

# Get functions from current DevStack
source $TRUNK_DEVSTACK_DIR/lib/nova

NOVNC_DIR=$DEST/noVNC

# install_quantumclient()
[[ -d $QUANTUMCLIENT_DIR ]] && sudo chown -R `whoami` $QUANTUMCLIENT_DIR
git_clone $QUANTUM_CLIENT_REPO $QUANTUMCLIENT_DIR $QUANTUM_CLIENT_BRANCH
setup_develop $QUANTUMCLIENT_DIR

# install_nova()
sudo chown -R `whoami` $NOVACLIENT_DIR $NOVA_DIR
install_novaclient
install_nova

# configure_quantumclient()
setup_develop $QUANTUMCLIENT_DIR

# configure_nova()
configure_novaclient
setup_develop $NOVA_DIR

# ``nova.conf``
# Normally created from scratch on each run if ``stack.sh``
# Until we can call that without duplicating the code just convert the old one

[[ -r $NOVA_CONF.$START_RELEASE ]] || \
    cp -p $NOVA_CONF $NOVA_CONF.$START_RELEASE
#cp -p $NOVA_CONF.$START_RELEASE $NOVA_CONF

# NOOP for now!

# Migrate the database
nova-manage --config-file $NOVA_CONF db sync || die "DB sync error"

# Start Nova
# n-api is started independently in stack.sh
screen_it n-api "cd $NOVA_DIR && $NOVA_BIN_DIR/nova-api"

start_nova

is_service_enabled swift3 || screen_it n-obj "cd $NOVA_DIR && $NOVA_BIN_DIR/nova-objectstore"

set +o xtrace
echo "*********************************************************************"
echo "SUCCESS: End $0"
echo "*********************************************************************"
