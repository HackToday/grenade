#!/usr/bin/env bash

# ``upgrade-glance``

echo "*********************************************************************"
echo "Begin $0"
echo "*********************************************************************"

# Clean up any resources that may be in use
cleanup() {
    set +o errexit

    echo "*********************************************************************"
    echo "ERROR: Abort $0"
    echo "*********************************************************************"

    # Kill ourselves to signal any calling process
    trap 2; kill -2 $$
}

trap cleanup SIGHUP SIGINT SIGTERM

# Keep track of the grenade directory
GRENADE_DIR=$(cd $(dirname "$0") && pwd)

# Import common functions
source $GRENADE_DIR/functions

# Determine what system we are running on.  This provides ``os_VENDOR``,
# ``os_RELEASE``, ``os_UPDATE``, ``os_PACKAGE``, ``os_CODENAME``
# and ``DISTRO``
GetDistro

# Source params
source $GRENADE_DIR/grenaderc

# This script exits on an error so that errors don't compound and you see
# only the first error that occured.
set -o errexit

# Print the commands being run so that we can see the command that triggers
# an error.  It is also useful for following allowing as the install occurs.
set -o xtrace


# Upgrade Images
# ==============

# Based on http://bcwaldon.cc/2012/09/05/glance-essex-to-folsom-upgrade.html

# Kill a running Keystone
for serv in g-api g-reg; do
    screen -S $SCREEN_NAME -p $serv -X kill
done

# Duplicate some setup bits from trunk DevStack
cd $TRUNK_DEVSTACK_DIR
source $TRUNK_DEVSTACK_DIR/stackrc
SERVICE_HOST=${SERVICE_HOST:-localhost}
S3_SERVICE_PORT=${S3_SERVICE_PORT:-8080}

# Get functions from current DevStack
source $TRUNK_DEVSTACK_DIR/lib/glance

# install_glance()
[[ -d $GLANCECLIENT_DIR ]] && sudo chown -R `whoami` $GLANCECLIENT_DIR
install_glanceclient
[[ -d $GLANCE_DIR ]] && sudo chown -R `whoami` $GLANCE_DIR
install_glance

configure_glanceclient
# configure_glance()
setup_develop $GLANCE_DIR

# Save original files and prepare to upgrade conf files
[[ -r $GLANCE_REGISTRY_CONF.$START_RELEASE ]] || \
    cp -p $GLANCE_REGISTRY_CONF $GLANCE_REGISTRY_CONF.$START_RELEASE

[[ -r $GLANCE_API_CONF.$START_RELEASE ]] || \
    cp -p $GLANCE_API_CONF $GLANCE_API_CONF.$START_RELEASE

[[ -r $GLANCE_REGISTRY_PASTE_INI.$START_RELEASE ]] || \
    cp -p $GLANCE_REGISTRY_PASTE_INI $GLANCE_REGISTRY_PASTE_INI.$START_RELEASE

[[ -r $GLANCE_API_PASTE_INI.$START_RELEASE ]] || \
    cp -p $GLANCE_API_PASTE_INI $GLANCE_API_PASTE_INI.$START_RELEASE

# NOOP for now!

# Migrate the database
glance-manage db_sync || die "DB sync error"

# Start Glance
start_glance

set +o xtrace
echo "*********************************************************************"
echo "SUCCESS: End $0"
echo "*********************************************************************"
